@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# ViennaPS requires C++17
set(CMAKE_CXX_STANDARD "17")

# ##################################################################################################
# compiler dependent settings for ViennaPS
# ##################################################################################################
find_dependency(OpenMP)
list(APPEND VIENNAPS_LIBRARIES OpenMP::OpenMP_CXX)

# compiler dependent settings
if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
  # disable-new-dtags sets RPATH which searches for libs recursively, instead of RUNPATH which does
  # not needed for g++ to link correctly
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--disable-new-dtags")
elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
  # SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /openmp /wd\"4267\" /wd\"4244\"")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd\"4267\" /wd\"4244\"")
endif()

set(VIENNAPS_INCLUDE_DIRS "@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_INCLUDEDIR@")

set(ViennaLS_DIR @ViennaLS_DIR@)
set(ViennaRay_DIR @ViennaRay_DIR@)

find_dependency(ViennaLS PATHS ${ViennaLS_DIR} NO_DEFAULT_PATH)
find_dependency(ViennaRay PATHS ${ViennaRay_DIR} NO_DEFAULT_PATH)

list(APPEND VIENNAPS_INCLUDE_DIRS ${VIENNALS_INCLUDE_DIRS} ${VIENNARAY_INCLUDE_DIRS})
list(APPEND VIENNAPS_LIBRARIES ${VIENNALS_LIBRARIES} ${VIENNARAY_LIBRARIES})

message(STATUS "ViennaLS found at: ${ViennaLS_DIR}")
message(STATUS "ViennaRay found at: ${ViennaRay_DIR}")

option(VIENNAPS_VERBOSE "Get verbose output and intermediate results." ON)
if(VIENNAPS_VERBOSE)
  add_compile_definitions(VIENNAPS_VERBOSE)
endif(VIENNAPS_VERBOSE)

check_required_components("@PROJECT_NAME@")
